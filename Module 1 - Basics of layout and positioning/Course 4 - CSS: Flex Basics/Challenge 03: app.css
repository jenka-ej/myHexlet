/* Термином Hero Section часто описывают заглавный блок сайта или лендинга. 
Его цель — максимальное выделение ключевой мысли и привлечение внимания в самые первые секунды нахождения пользователя на странице.
В этом испытании вы реализуете один из примеров такой секции.

Макет для вёрстки расположен на сервисе Figma. Используйте его для определения размера отступов, шрифтов и размера различных элементов. Изображение и шрифты находятся в директории assets.

Базовые настройки макета:
1) Размер контейнера с секцией: 1280px
2) Межстрочный интервал: 2.3. Установите его для <body>
3) Внутренние отступы у колонок — по 30 пикселей слева и справа
4) Внутренние отступы контейнера — по 100 пикселей сверху и снизу

Подсказки:
1) Отцентруйте весь макет с помощью Flex у элемента <body>. Не используйте внешние отступы для центровки макета
2) Мысленно разбейте макет на две равные колонки. Левая колонка является флекс-контейнером и центрирует весь контент по вертикали
3) Правая колонка не является флекс-контейнером. Для позиционирования изображения можно использовать свойство text-align
4) Цифры «01» располагаются на 30px ниже и 100px левее своего изначального месторасположения в потоке документа
5) Для стрелки используйте знак →. Для удобства позиционирования можете выставить ей межстрочный интервал 0
6) Используйте минимальное количество абсолютного и относительного позиционирования. Старайтесь не брать значения позиционирования из вкладки стилей в Figma
7) Высота каждой колонки — 713px. Вы можете зафиксировать это значение при работе с макетом
8) Пути к шрифтам:
8.1) ../assets/fonts/Brygada-1918.woff2
8.2) ../assets/fonts/OpenSans-Regular.woff2
8.3) ../assets/fonts/OpenSans-Bold.woff2 */

:root {
  --dark: #0b1d26;
  --white: #fff;
  --yellow: #f7df1e;
}

@font-face {
  font-weight: 400;
  font-family: Brygada;
  src: url("../assets/fonts/Brygada-1918.woff2");
}

@font-face {
  font-weight: 700;
  font-family: "Open Sans";
  src: url("../assets/fonts/OpenSans-Bold.woff2");
}

@font-face {
  font-weight: 400;
  font-family: "Open Sans";
  src: url("../assets/fonts/OpenSans-Regular.woff2");
}

body {
  width: 1900px;
  height: 913px;

  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;

  background: var(--dark);

  line-height: 2.3;
}

.d-flex {
  display: flex;

  width: 1280px;
  height: 713px;

  padding: 100px 0;

  box-sizing: border-box;
}

.left-section {
  width: 640px;
  height: 513px;

  padding: 0 30px;

  box-sizing: border-box;
}

.right-section {
  width: 640px;
  height: 713px;

  padding: 0 30px 12.8px 130px;

  align-self: center;

  box-sizing: border-box;
}

.tag-line {
  display: flex;
  align-items: center;

  margin-top: 24.8px;

  position: relative;
}

h1 {
  position: absolute;
  top: 30px;
  left: -100px;

  margin: 0;

  font-family: "Open Sans", sans-serif;
  font-size: 200px;
  font-style: normal;
  font-weight: 700;

  line-height: 0px;

  letter-spacing: 4.2px;
  text-transform: uppercase;

  color: var(--white);
  opacity: 0.1;
}

h2 {
  margin: 0;

  font-family: "Open Sans", sans-serif;
  font-size: 14px;
  font-style: normal;
  font-weight: 700;
  line-height: 32.2px;
  letter-spacing: 4.2px;
  text-transform: uppercase;

  color: var(--yellow);
}

.pseudo::before {
  display: block;

  width: 70px;
  height: 2px;

  margin-right: 30px;

  content: "";

  background: var(--yellow);
}

h3 {
  margin: 17.2px 0 71.4px;

  font-family: Brygada, sans-serif;
  font-size: 64px;
  font-style: normal;
  font-weight: 400;

  line-height: 70.4px;

  color: var(--white);
}

.description {
  margin: 0 0 31.8px;

  font-family: "Open Sans", sans-serif;
  font-size: 16px;
  font-style: normal;
  font-weight: 400;

  line-height: 36.8px;

  color: var(--white);
}

.after {
  display: flex;
  align-items: center;

  margin: 0;
}

.more {
  margin-right: 10px;

  font-family: "Open Sans", sans-serif;
  font-size: 17px;
  font-style: normal;
  font-weight: 400;

  line-height: 39.1px;

  color: var(--yellow);
}

.arrow {
  font-family: Roboto, sans-serif;
  font-size: 25.5px;
  font-style: normal;
  font-weight: 400;

  line-height: 0px;

  color: var(--yellow);
}

.z-index-1 {
  z-index: 1;
}

.z-index-2 {
  z-index: 2;
}

/* index.html */

<!DOCTYPE html>
<html lang="ru">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Профессия «Фронтенд-программист»</title>
  <link rel="stylesheet" href="styles/app.css">
</head>

<body>
  <div class="d-flex w-1280">
    <div class="left-section">
      <div class="tag-line">
        <h1 class="z-index-1">01</h1>
        <div class="pseudo"></div>
        <h2 class="z-index-2">Профессия</h2>
      </div>
      <h3 class="z-index-2">Фронтенд программист</h3>
      <p class="description">Создает одностраничные сайты (SPA) на React. Строит взаимодействие с бекендом через AJAX или WebSockets. Следит за
      производительностью и обеспечивает безопасное выполнение кода. Хорошо разбирается в браузерном API и веб-технологиях
      HTML, CSS, HTTP, DNS.</p>
      <div class="after">
        <p class="more">Узнать больше</p>
        <p class="arrow">→</p>
      </div>
    </div>
    <div class="right-section">
      <img src="assets/images/01.png" alt="JS logo">
    </div>
  </div>
</body>

</html>

/* __tests__ */

const { test, expect } = require('@playwright/test');

const settings = {
  screenshot: {
    type: 'jpeg',
    quality: 70,
    fullPage: true,
  },
  viewport: {
    width: 1900,
    height: 900,
  },
};

let page;

test.beforeAll(async ({ browser }) => {
  page = await browser.newPage();
  await page.goto('/');
  await page.setViewportSize(settings.viewport);
});

test.afterAll(async () => {
  await page.close();
});

test.describe('Hero Section Layout', () => {
  test('1900px. Layout should be equal to template', async () => {
    const template = await page
      .locator('html')
      .screenshot(settings.screenshot);

    expect(template).toMatchSnapshot();
  });
});
